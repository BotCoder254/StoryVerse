<div class="max-w-4xl mx-auto">
    <div class="bg-white shadow-lg rounded-lg overflow-hidden">
        <div class="px-6 py-8">
            <div class="flex items-center justify-between mb-6">
                <h2 class="text-2xl font-bold text-gray-900">Edit Story</h2>
                <form action="/stories/<%= story._id %>?_method=DELETE" method="POST" class="inline">
                    <button
                        type="submit"
                        onclick="return confirm('Are you sure you want to delete this story?')"
                        class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700"
                    >
                        <i class="fas fa-trash mr-2"></i> Delete Story
                    </button>
                </form>
            </div>
            
            <form action="/stories/<%= story._id %>?_method=PUT" method="POST" class="space-y-6">
                <!-- Title -->
                <div>
                    <label for="title" class="block text-sm font-medium text-gray-700">Title</label>
                    <div class="mt-1">
                        <input
                            type="text"
                            id="title"
                            name="title"
                            required
                            value="<%= story.title %>"
                            class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
                            placeholder="Enter your story title"
                        >
                    </div>
                </div>

                <!-- Story Body -->
                <div>
                    <label for="body" class="block text-sm font-medium text-gray-700">Story Content</label>
                    <div class="mt-1">
                        <textarea
                            id="body"
                            name="body"
                            rows="12"
                            required
                            class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
                            placeholder="Write your story here..."
                        ><%= story.body %></textarea>
                    </div>
                </div>

                <!-- Status -->
                <div>
                    <label for="status" class="block text-sm font-medium text-gray-700">Status</label>
                    <select
                        id="status"
                        name="status"
                        class="mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
                    >
                        <option value="public" <%= story.status === 'public' ? 'selected' : '' %>>Public</option>
                        <option value="private" <%= story.status === 'private' ? 'selected' : '' %>>Private</option>
                    </select>
                </div>

                <!-- Tags -->
                <div>
                    <label for="tags" class="block text-sm font-medium text-gray-700">Tags</label>
                    <div class="mt-1">
                        <input
                            type="text"
                            id="tags"
                            name="tags"
                            value="<%= story.tags ? story.tags.join(', ') : '' %>"
                            class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
                            placeholder="Enter tags separated by commas"
                        >
                    </div>
                    <p class="mt-1 text-sm text-gray-500">Separate tags with commas (e.g., fiction, adventure, mystery)</p>
                </div>

                <!-- Thumbnail URL -->
                <div>
                    <label for="thumbnail" class="block text-sm font-medium text-gray-700">Thumbnail URL</label>
                    <div class="mt-1">
                        <input
                            type="url"
                            id="thumbnail"
                            name="thumbnail"
                            value="<%= story.thumbnail %>"
                            class="block w-full border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500"
                            placeholder="Enter image URL or leave blank for random image"
                        >
                    </div>
                </div>

                <!-- Preview Current Thumbnail -->
                <div class="mt-4">
                    <p class="text-sm font-medium text-gray-700 mb-2">Current Thumbnail</p>
                    <img src="<%= story.thumbnail %>" alt="Current thumbnail" class="h-48 w-full object-cover rounded-lg">
                </div>

                <!-- Submit Buttons -->
                <div class="flex justify-end space-x-4">
                    <a
                        href="/dashboard"
                        class="inline-flex items-center px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
                    >
                        Cancel
                    </a>
                    <button
                        type="submit"
                        class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
                    >
                        <i class="fas fa-save mr-2"></i> Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add TinyMCE Editor -->
<script src="https://cdn.tiny.cloud/1/etljeg3b928krtgc736xpibhxxkw8wohp1ix6y76w56ppqpg/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    tinymce.init({
        selector: '#body',
        plugins: 'anchor autolink charmap codesample emoticons image link lists media searchreplace table visualblocks wordcount checklist mediaembed casechange export formatpainter pageembed permanentpen footnotes advtemplate advtable advcode editimage tableofcontents mergetags powerpaste tinymcespellchecker autocorrect typography inlinecss',
        toolbar: 'undo redo | blocks fontfamily fontsize | bold italic underline strikethrough | link image media table mergetags | align lineheight | checklist numlist bullist indent outdent | emoticons charmap | removeformat',
        height: 400,
        skin: 'oxide',
        content_css: 'default',
        branding: false,
        promotion: false,
        images_upload_handler: function (blobInfo, progress) {
            return new Promise((resolve, reject) => {
                const formData = new FormData();
                formData.append('file', blobInfo.blob(), blobInfo.filename());

                fetch('/stories/upload-image', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(result => {
                    resolve(result.location);
                })
                .catch(error => {
                    reject('Image upload failed');
                });
            });
        }
    });

    // Media Preview Functions
    function previewMedia(input) {
        const file = input.files[0];
        if (!file) return;

        const mediaPreview = document.getElementById('mediaPreview');
        const imagePreview = document.getElementById('imagePreview');
        const videoPreview = document.getElementById('videoPreview');
        const mediaCaptionContainer = document.getElementById('mediaCaptionContainer');

        // Show caption input
        mediaCaptionContainer.classList.remove('hidden');

        // Create object URL
        const objectUrl = URL.createObjectURL(file);

        if (file.type.startsWith('image/')) {
            imagePreview.src = objectUrl;
            imagePreview.classList.remove('hidden');
            videoPreview.classList.add('hidden');
        } else if (file.type.startsWith('video/')) {
            videoPreview.src = objectUrl;
            videoPreview.classList.remove('hidden');
            imagePreview.classList.add('hidden');

            // Check video duration
            videoPreview.onloadedmetadata = function() {
                if (this.duration > 15) {
                    alert('Video must be 15 seconds or less');
                    removeMedia();
                    return;
                }
            };
        }

        mediaPreview.classList.remove('hidden');
    }

    function removeMedia() {
        const input = document.getElementById('media');
        const mediaPreview = document.getElementById('mediaPreview');
        const imagePreview = document.getElementById('imagePreview');
        const videoPreview = document.getElementById('videoPreview');
        const mediaCaptionContainer = document.getElementById('mediaCaptionContainer');

        input.value = '';
        imagePreview.src = '';
        videoPreview.src = '';
        mediaPreview.classList.add('hidden');
        mediaCaptionContainer.classList.add('hidden');
    }

    // Drag and Drop Support
    const dropZone = document.querySelector('form');
    
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, preventDefaults, false);
    });

    function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
    }

    ['dragenter', 'dragover'].forEach(eventName => {
        dropZone.addEventListener(eventName, highlight, false);
    });

    ['dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, unhighlight, false);
    });

    function highlight(e) {
        dropZone.classList.add('border-indigo-500');
    }

    function unhighlight(e) {
        dropZone.classList.remove('border-indigo-500');
    }

    dropZone.addEventListener('drop', handleDrop, false);

    function handleDrop(e) {
        const dt = e.dataTransfer;
        const file = dt.files[0];
        
        const input = document.getElementById('media');
        input.files = dt.files;
        previewMedia(input);
    }
</script> 